@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Geist';
  src: url('/fonts/GeistVF.woff2') format('woff2');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Geist Mono';
  src: url('/fonts/GeistMonoVF.woff2') format('woff2');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Monocraft';
  src: url('/fonts/Monocraft.woff2') format('woff2');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Miracode';
  src: url('/fonts/Miracode.woff2') format('woff2');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@layer base {
  :root {
    --background: 0, 17%, 8%;
    --foreground: 122, 20%, 80%;
    --primary: 140, 60%, 96%;
    --primary-foreground: 0 0% 9%;
    --secondary: 133, 29%, 34%;
    --secondary-foreground: 141, 61%, 80%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 15, 46%, 66%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --additive: 112 50% 36%;
    --additive-foreground: 0 0% 9%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
  }

  *,
  *::before,
  *::after {
    @apply border-border;
  }

  html {
    color-scheme: dark;
    @apply bg-background text-foreground;

    ::-webkit-scrollbar-corner {
      @apply bg-transparent;
    }
  }

  .disable-transitions,
  .disable-transitions * {
    @apply !transition-none;
  }
}

@layer components {
  article {
    @apply prose-headings:scroll-mt-20 prose-headings:break-words first:prose-headings:mt-0 prose-p:break-words prose-a:!break-words prose-a:!decoration-muted-foreground prose-a:underline-offset-[3px] prose-a:transition-colors hover:prose-a:!decoration-foreground prose-pre:!px-0 prose-img:mx-auto;

    .katex-display {
      @apply overflow-x-auto overflow-y-hidden py-4;
    }

    /* Removes background from <mark> elements */
    mark {
      @apply bg-transparent;
    }

    /* Blanket syntax highlighting */
    code[data-theme*=' '] {
      span {
        color: var(--shiki-light);
      }

      .dark & span {
        color: var(--shiki-dark);
      }
    }

    /* Inline code */
    :not(pre) > code {
      @apply relative rounded bg-muted/50 px-[0.3rem] py-[0.2rem] font-mono text-sm font-medium;
    }

    /* Code blocks */
    figure[data-rehype-pretty-code-figure] {
      @apply relative;

      /* Code block titles */
      [data-rehype-pretty-code-title] {
        @apply break-words rounded-t-xl border-x border-t px-4 py-2 text-sm font-medium text-foreground;

        /* Remove top margin from code block if a title is present */
        & + pre {
          @apply mt-0 rounded-t-none;
        }
      }

      /* Shadcn-like scrollbar */
      pre::-webkit-scrollbar {
        @apply h-2.5 w-2.5;
      }

      pre::-webkit-scrollbar-track {
        @apply bg-transparent;
      }

      pre::-webkit-scrollbar-thumb {
        @apply rounded-full bg-border bg-clip-padding p-px;
      }

      /* Code block styles */
      pre {
        @apply static max-h-[600px] overflow-auto rounded-xl border bg-secondary/20 py-4 text-sm leading-loose;

        /* Code block content */
        > code {
          @apply whitespace-pre-wrap;
          counter-reset: line;

          /* For code blocks with line numbers */
          &[data-line-numbers] {
            > [data-line]::before {
              counter-increment: line;
              content: counter(line);
              @apply mr-4 inline-block w-4 text-right text-muted-foreground;
            }
          }

          /* For each line in the code block */
          > [data-line] {
            @apply px-4;
          }

          /* Highlighted lines */
          [data-highlighted-line] {
            @apply bg-foreground/10;
          }

          /* Highlighted characters */
          [data-highlighted-chars] > span {
            @apply bg-muted-foreground/40 py-[7px];
          }

          /* Diff lines */
          .diff {
            &.add {
              @apply bg-additive/15;
            }
            &.remove {
              @apply bg-destructive/15;
            }
          }

          /* Copy button */
          > button:has(> span) {
            @apply right-0.5 top-[3px] m-0 size-8 rounded-md bg-background p-1 backdrop-blur-none transition-all;
          }
        }
      }
    }
  }

  .breathing-loader {
    @apply flex items-center justify-center;
  }

  .breathing-loader span {
    @apply inline-block;
    animation: breathe 1.5s ease-in-out infinite;
  }

  .breathing-loader span:nth-child(1) {
    animation-delay: 0s;
  }
  .breathing-loader span:nth-child(2) {
    animation-delay: 0.1s;
  }
  .breathing-loader span:nth-child(3) {
    animation-delay: 0.2s;
  }
  .breathing-loader span:nth-child(4) {
    animation-delay: 0.3s;
  }
  .breathing-loader span:nth-child(5) {
    animation-delay: 0.4s;
  }
  .breathing-loader span:nth-child(6) {
    animation-delay: 0.5s;
  }
  .breathing-loader span:nth-child(7) {
    animation-delay: 0.6s;
  }
  .breathing-loader span:nth-child(8) {
    animation-delay: 0.7s;
  }
  .breathing-loader span:nth-child(9) {
    animation-delay: 0.8s;
  }
  .breathing-loader span:nth-child(10) {
    animation-delay: 0.9s;
  }

  @keyframes breathe {
    0%,
    100% {
      transform: scale(1);
      opacity: 0.8;
    }
    50% {
      transform: scale(1.2);
      opacity: 1;
    }
  }
}
