---
import Container from '@/components/Container.astro'
import { Separator } from '@/components/ui/separator'
import { SOCIAL_LINKS } from '@/consts'
import Link from './Link.astro'
import SocialIcons from './SocialIcons.astro'
---

<footer class="py-4">
  <Container>
    <div
      class="flex flex-col items-center justify-center gap-y-2 sm:flex-row sm:justify-between"
    >
      <div class="flex items-center gap-x-2">
        <span class="text-center text-sm text-muted-foreground">
          &copy; {new Date().getFullYear()} All rights reserved.
        </span>
        <Separator orientation="vertical" className="h-4" />
        <p class="text-center text-sm text-muted-foreground">
          Made with ‚ù§ by <Link
            href="https://github.com/spuuntries"
            class="text-foreground"
            external
            underline>spuun</Link
          >.
        </p>
      </div>
      <SocialIcons links={SOCIAL_LINKS} />
    </div>
  </Container>
</footer>

<script>
  // Credit to https://github.com/paularmstrong/onerepo

  /**
   * @params {HTMLCollectionOf<HTMLElement>} graphs
   */
  async function renderDiagrams(graphs: HTMLCollection) {
    // @ts-ignore
    const { default: mermaid } = await import('mermaid')
    mermaid.initialize({
      startOnLoad: false,
      fontFamily: 'var(--sans-font)',
      // @ts-ignore This works, but TS expects a enum for some reason
      theme:
        document.documentElement.dataset.theme === 'dark' ? 'dark' : 'default',
    })

    for (const graph of Array.from(graphs)) {
      const content = graph.getAttribute('data-content')
      if (!content) {
        continue
      }
      const svg = document.createElement('svg')
      svg.id = 'mermaid-' + Math.round(Math.random() * 100000)
      graph.appendChild(svg)
      // @ts-ignore
      mermaid
        .render(svg.id, content.replace(/(%0A)+/g, '\n'))
        .then((result) => {
          graph.innerHTML = result.svg
        })
    }
  }

  ;['DOMContentLoaded', 'load'].forEach((event) => {
    document.addEventListener(event, () => {
      const graphs = document.getElementsByClassName('mermaid')
      if (graphs.length > 0) {
        renderDiagrams(graphs)
      }
    })
  })
</script>
